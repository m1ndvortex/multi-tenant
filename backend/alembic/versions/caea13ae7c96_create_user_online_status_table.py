"""create_user_online_status_table

Revision ID: caea13ae7c96
Revises: 7f9936d88f4e
Create Date: 2025-09-11 09:02:00.140802

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'caea13ae7c96'
down_revision = '7f9936d88f4e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_activity_log_ip', table_name='activity_logs')
    op.drop_index('idx_activity_log_status', table_name='activity_logs')
    op.drop_index('idx_activity_log_tenant_action', table_name='activity_logs')
    op.drop_index('idx_activity_log_tenant_date', table_name='activity_logs')
    op.drop_index('idx_activity_log_tenant_resource', table_name='activity_logs')
    op.drop_index('idx_activity_log_tenant_user', table_name='activity_logs')
    op.drop_index('ix_activity_logs_action', table_name='activity_logs')
    op.drop_index('ix_activity_logs_resource_id', table_name='activity_logs')
    op.drop_index('ix_activity_logs_resource_type', table_name='activity_logs')
    op.drop_index('ix_activity_logs_tenant_id', table_name='activity_logs')
    op.drop_index('ix_activity_logs_user_id', table_name='activity_logs')
    op.drop_table('activity_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_logs',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True, comment='User who performed the action (null for system actions)'),
    sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment="Action type (e.g., 'user_created', 'invoice_updated')"),
    sa.Column('resource_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment="Type of resource affected (e.g., 'user', 'invoice', 'customer')"),
    sa.Column('resource_id', sa.UUID(), autoincrement=False, nullable=True, comment='ID of the affected resource'),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='JSON object with action details and metadata'),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True, comment='IP address of the request'),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True, comment='User agent string from the request'),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Session identifier'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Action status (success, failed, pending)'),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True, comment='Error message if action failed'),
    sa.Column('duration_ms', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Action duration in milliseconds'),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False, comment='Primary key UUID'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False, comment='Tenant ID for multi-tenant data isolation'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='activity_logs_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='activity_logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_logs_pkey')
    )
    op.create_index('ix_activity_logs_user_id', 'activity_logs', ['user_id'], unique=False)
    op.create_index('ix_activity_logs_tenant_id', 'activity_logs', ['tenant_id'], unique=False)
    op.create_index('ix_activity_logs_resource_type', 'activity_logs', ['resource_type'], unique=False)
    op.create_index('ix_activity_logs_resource_id', 'activity_logs', ['resource_id'], unique=False)
    op.create_index('ix_activity_logs_action', 'activity_logs', ['action'], unique=False)
    op.create_index('idx_activity_log_tenant_user', 'activity_logs', ['tenant_id', 'user_id'], unique=False)
    op.create_index('idx_activity_log_tenant_resource', 'activity_logs', ['tenant_id', 'resource_type', 'resource_id'], unique=False)
    op.create_index('idx_activity_log_tenant_date', 'activity_logs', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_activity_log_tenant_action', 'activity_logs', ['tenant_id', 'action'], unique=False)
    op.create_index('idx_activity_log_status', 'activity_logs', ['status'], unique=False)
    op.create_index('idx_activity_log_ip', 'activity_logs', ['ip_address'], unique=False)
    # ### end Alembic commands ###